From 6bd8351ec2f2d295f376587fb0afef98a12d8fea Mon Sep 17 00:00:00 2001
From: Steve Lhomme <robUx4@gmail.com>
Date: Fri, 14 Aug 2015 10:23:33 +0200
Subject: [PATCH 123/128] winstore: handle volume/mute in the winstore audio
 output

---
 modules/audio_output/mmdevice.h | 12 ++++++++
 modules/audio_output/wasapi.c   | 63 +++++++++++++++++++++++++++++++++++++++--
 modules/audio_output/winstore.c | 37 ++++++++++++++++++++++++
 3 files changed, 110 insertions(+), 2 deletions(-)

diff --git a/modules/audio_output/mmdevice.h b/modules/audio_output/mmdevice.h
index 51f5e42..68f506c 100644
--- a/modules/audio_output/mmdevice.h
+++ b/modules/audio_output/mmdevice.h
@@ -35,6 +35,8 @@ struct aout_stream
     HRESULT (*play)(aout_stream_t *, block_t *);
     HRESULT (*pause)(aout_stream_t *, bool);
     HRESULT (*flush)(aout_stream_t *);
+    HRESULT (*set_volume)(aout_stream_t *,float);
+    HRESULT (*mute)(aout_stream_t *,bool);
 
     struct
     {
@@ -86,6 +88,16 @@ static inline HRESULT aout_stream_Flush(aout_stream_t *s, bool wait)
         return (s->flush)(s);
 }
 
+static inline HRESULT aout_stream_SetVolume(aout_stream_t *s, float volume)
+{
+    return s->set_volume ? (s->set_volume)(s, volume) : E_POINTER;
+}
+
+static inline HRESULT aout_stream_Mute(aout_stream_t *s, bool mute)
+{
+    return s->mute ? (s->mute)(s, mute) : E_POINTER;
+}
+
 static inline
 HRESULT aout_stream_Activate(aout_stream_t *s, REFIID iid,
                              PROPVARIANT *actparms, void **pv)
diff --git a/modules/audio_output/wasapi.c b/modules/audio_output/wasapi.c
index 53ca8d2..93d4030 100644
--- a/modules/audio_output/wasapi.c
+++ b/modules/audio_output/wasapi.c
@@ -18,11 +18,15 @@
  * Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
  *****************************************************************************/
 
-#define _WIN32_WINNT 0x600
 #ifdef HAVE_CONFIG_H
 # include <config.h>
 #endif
 
+#if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x600
+# undef _WIN32_WINNT
+# define _WIN32_WINNT 0x600
+#endif
+
 #define INITGUID
 #define COBJMACROS
 #define CONST_VTABLE
@@ -40,9 +44,10 @@
 DEFINE_GUID(IID_IAudioClient, 0x1cb9ad4c, 0xdbfa, 0x4c32, 0xb1,0x78, 0xc2,0xf5,0x68,0xa7,0x03,0xb2);
 DEFINE_GUID(IID_IAudioRenderClient, 0xf294acfc, 0x3146, 0x4483, 0xa7,0xbf, 0xad,0xdc,0xa7,0xc2,0x60,0xe2);
 DEFINE_GUID(IID_IAudioClock, 0xcd63314f, 0x3fba, 0x4a1b, 0x81,0x2c, 0xef,0x96,0x35,0x87,0x28,0xe7);
+DEFINE_GUID(IID_ISimpleAudioVolume, 0x87ce5498, 0x68d6, 0x44e5, 0x92, 0x15, 0x6d, 0xa4, 0x7e, 0xf8, 0x83, 0xd8);
+#endif
 DEFINE_GUID(KSDATAFORMAT_SUBTYPE_IEEE_FLOAT, WAVE_FORMAT_IEEE_FLOAT, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);
 DEFINE_GUID(KSDATAFORMAT_SUBTYPE_PCM, WAVE_FORMAT_PCM, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);
-#endif
 
 static BOOL CALLBACK InitFreq(INIT_ONCE *once, void *param, void **context)
 {
@@ -78,6 +83,58 @@ typedef struct aout_stream_sys
 } aout_stream_sys_t;
 
 
+static HRESULT SetVolume(aout_stream_t *s, float vol)
+{
+    aout_stream_sys_t *sys = s->sys;
+    ISimpleAudioVolume *pc_AudioVolume = NULL;
+    HRESULT hr;
+
+    hr = IAudioClient_GetService(sys->client, &IID_ISimpleAudioVolume, &pc_AudioVolume);
+    if (FAILED(hr))
+    {
+        msg_Err(s, "cannot get volume service (error 0x%lx)", hr);
+        goto done;
+    }
+
+    hr = ISimpleAudioVolume_SetMasterVolume(pc_AudioVolume, vol, NULL);
+    if (FAILED(hr))
+    {
+        msg_Err(s, "cannot set volume (error 0x%lx)", hr);
+        goto done;
+    }
+
+done:
+    ISimpleAudioVolume_Release(pc_AudioVolume);
+
+    return hr;
+}
+
+static HRESULT Mute(aout_stream_t *s, bool mute)
+{
+    aout_stream_sys_t *sys = s->sys;
+    ISimpleAudioVolume *pc_AudioVolume = NULL;
+    HRESULT hr;
+
+    hr = IAudioClient_GetService(sys->client, &IID_ISimpleAudioVolume, &pc_AudioVolume);
+    if (FAILED(hr))
+    {
+        msg_Err(s, "cannot get volume service (error 0x%lx)", hr);
+        goto done;
+    }
+
+    hr = ISimpleAudioVolume_SetMute(pc_AudioVolume, mute, NULL);
+    if (FAILED(hr))
+    {
+        msg_Err(s, "cannot set mute (error 0x%lx)", hr);
+        goto done;
+    }
+
+done:
+    ISimpleAudioVolume_Release(pc_AudioVolume);
+
+    return hr;
+}
+
 /*** VLC audio output callbacks ***/
 static HRESULT TimeGet(aout_stream_t *s, mtime_t *restrict delay)
 {
@@ -436,6 +493,8 @@ static HRESULT Start(aout_stream_t *s, audio_sample_format_t *restrict fmt,
     sys->written = 0;
     s->sys = sys;
     s->time_get = TimeGet;
+    s->set_volume = SetVolume;
+    s->mute = Mute;
     s->play = Play;
     s->pause = Pause;
     s->flush = Flush;
diff --git a/modules/audio_output/winstore.c b/modules/audio_output/winstore.c
index b5a9233..5b1ebe9 100644
--- a/modules/audio_output/winstore.c
+++ b/modules/audio_output/winstore.c
@@ -58,6 +58,41 @@ struct aout_sys_t
     IAudioClient *client;
 };
 
+static int VolumeSet(audio_output_t *aout, float vol)
+{
+    aout_sys_t *sys = aout->sys;
+    HRESULT hr;
+    float gain = 1.f;
+
+    vol = vol * vol * vol; /* ISimpleAudioVolume is tapered linearly. */
+
+    if (vol > 1.f)
+    {
+        gain = vol;
+        vol = 1.f;
+    }
+
+    aout_GainRequest(aout, gain);
+
+    // TODO EnterMTA();
+    hr = aout_stream_SetVolume(sys->stream, vol);
+    // TODO LeaveMTA();
+
+    return SUCCEEDED(hr) ? 0 : -1;
+}
+
+static int MuteSet(audio_output_t *aout, bool mute)
+{
+    aout_sys_t *sys = aout->sys;
+    HRESULT hr;
+
+    // TODO EnterMTA();
+    hr = aout_stream_Mute(sys->stream, mute);
+    // TODO LeaveMTA();
+
+    return SUCCEEDED(hr) ? 0 : -1;
+}
+
 static int TimeGet(audio_output_t *aout, mtime_t *restrict delay)
 {
     aout_sys_t *sys = aout->sys;
@@ -194,6 +229,8 @@ static int Open(vlc_object_t *obj)
     aout->start = Start;
     aout->stop = Stop;
     aout->time_get = TimeGet;
+    aout->volume_set = VolumeSet;
+    aout->mute_set = MuteSet;
     aout->play = Play;
     aout->pause = Pause;
     aout->flush = Flush;
-- 
1.9.5.msysgit.1

