From 7e68a768e4422d5f9abebf00a6350e8e0b6b60d0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hugo=20Beauz=C3=A9e-Luyssen?= <hugo@beauzee.fr>
Date: Tue, 21 Oct 2014 14:46:08 +0200
Subject: [PATCH 005/128] modules: Replace VLAs by alloca()

---
 modules/access/ftp.c                  | 2 +-
 modules/access/rtsp/rtsp.c            | 2 +-
 modules/access/vcd/cdrom.c            | 2 +-
 modules/codec/avcodec/audio.c         | 4 ++--
 modules/codec/avcodec/d3d11va.c       | 2 +-
 modules/codec/libass.c                | 4 ++--
 modules/control/globalhotkeys/win32.c | 2 +-
 modules/control/oldrc.c               | 5 +++--
 modules/demux/avformat/demux.c        | 2 +-
 modules/demux/avi/avi.c               | 4 ++--
 modules/demux/playlist/dvb.c          | 2 +-
 modules/lua/libs/net.c                | 2 +-
 modules/misc/addons/fsstorage.c       | 2 +-
 modules/mux/mpeg/tables.c             | 2 +-
 modules/services_discovery/sap.c      | 4 ++--
 modules/video_output/vmem.c           | 2 +-
 16 files changed, 22 insertions(+), 21 deletions(-)

diff --git a/modules/access/ftp.c b/modules/access/ftp.c
index 36f7bb9..300743e 100644
--- a/modules/access/ftp.c
+++ b/modules/access/ftp.c
@@ -151,7 +151,7 @@ static int ftp_SendCommand( vlc_object_t *obj, access_sys_t *sys,
                             const char *fmt, ... )
 {
     size_t fmtlen = strlen( fmt );
-    char fmtbuf[fmtlen + 3];
+    char *fmtbuf = alloca(fmtlen + 3);
 
     memcpy( fmtbuf, fmt, fmtlen );
     memcpy( fmtbuf + fmtlen, "\r\n", 3 );
diff --git a/modules/access/rtsp/rtsp.c b/modules/access/rtsp/rtsp.c
index f044a9d..f04a440 100644
--- a/modules/access/rtsp/rtsp.c
+++ b/modules/access/rtsp/rtsp.c
@@ -509,7 +509,7 @@ int rtsp_connect( rtsp_client_t *rtsp, const char *psz_mrl,
     if( pathbegin < strlen(mrl_ptr) ) s->path = strdup(mrl_ptr+pathbegin+1);
     if( colon != slash )
     {
-        char buffer[pathbegin-hostend];
+        char *buffer = alloca(pathbegin-hostend);
 
         strncpy( buffer, mrl_ptr+hostend+1, pathbegin-hostend-1 );
         buffer[pathbegin-hostend-1] = 0;
diff --git a/modules/access/vcd/cdrom.c b/modules/access/vcd/cdrom.c
index a4a8bd4..7ce9ad4 100644
--- a/modules/access/vcd/cdrom.c
+++ b/modules/access/vcd/cdrom.c
@@ -1282,7 +1282,7 @@ static int CdTextRead( vlc_object_t *p_object, const vcddev_t *p_vcddev,
     TOCEx.Format = CDROM_READ_TOC_EX_FORMAT_CDTEXT;
 
     const int i_header_size = __MAX( 4, MINIMUM_CDROM_READ_TOC_EX_SIZE );
-    uint8_t header[i_header_size];
+    uint8_t *header = alloca(i_header_size);
     DWORD i_read;
     if( !DeviceIoControl( p_vcddev->h_device_handle, IOCTL_CDROM_READ_TOC_EX,
                           &TOCEx, sizeof(TOCEx), header, i_header_size, &i_read, 0 ) )
diff --git a/modules/codec/avcodec/audio.c b/modules/codec/avcodec/audio.c
index e1be3a5..6c905bf 100644
--- a/modules/codec/avcodec/audio.c
+++ b/modules/codec/avcodec/audio.c
@@ -354,7 +354,7 @@ static block_t *DecodeAudio( decoder_t *p_dec, block_t **pp_block )
         if (unlikely(p_block == NULL))
             goto drop;
 
-        const void *planes[ctx->channels];
+        const void **planes = alloca(ctx->channels * sizeof(*planes));
         for (int i = 0; i < ctx->channels; i++)
             planes[i] = frame->extended_data[i];
 
@@ -477,7 +477,7 @@ static void SetupOutputFormat( decoder_t *p_dec, bool b_trust )
      * FIXME should we use fmt_in.audio.i_physical_channels or not ?
      */
     const unsigned i_order_max = 8 * sizeof(p_sys->p_context->channel_layout);
-    uint32_t pi_order_src[i_order_max];
+    uint32_t *pi_order_src = alloca(i_order_max * sizeof(*pi_order_src));
     int i_channels_src = 0;
 
     if( p_sys->p_context->channel_layout )
diff --git a/modules/codec/avcodec/d3d11va.c b/modules/codec/avcodec/d3d11va.c
index 54a30ca..867e4f6 100644
--- a/modules/codec/avcodec/d3d11va.c
+++ b/modules/codec/avcodec/d3d11va.c
@@ -726,7 +726,7 @@ static int DxCreateDecoderSurfaces(vlc_va_t *va, int codec_id, const video_forma
     }
 
     /* List all configurations available for the decoder */
-    D3D11_VIDEO_DECODER_CONFIG cfg_list[cfg_count];
+    D3D11_VIDEO_DECODER_CONFIG *cfg_list = alloca(cfg_count * sizeof(D3D11_VIDEO_DECODER_CONFIG));
     for (unsigned i = 0; i < cfg_count; i++) {
         hr = ID3D11VideoDevice_GetVideoDecoderConfig( (ID3D11VideoDevice*) dx_sys->d3ddec, &decoderDesc, i, &cfg_list[i] );
         if (FAILED(hr)) {
diff --git a/modules/codec/libass.c b/modules/codec/libass.c
index 067ef6b..c67a8d9 100644
--- a/modules/codec/libass.c
+++ b/modules/codec/libass.c
@@ -446,7 +446,7 @@ static void SubpictureUpdate( subpicture_t *p_subpic,
      * it looks ugly (text unaligned).
      */
     const int i_max_region = 4;
-    rectangle_t region[i_max_region];
+    rectangle_t *region = alloca(i_max_region * sizeof(*region));
     const int i_region = BuildRegions( region, i_max_region, p_img, fmt.i_width, fmt.i_height );
 
     if( i_region <= 0 )
@@ -551,7 +551,7 @@ static int BuildRegions( rectangle_t *p_region, int i_max_region, ASS_Image *p_i
     int i_maxh = i_w_inc;
     int i_maxw = i_h_inc;
     int i_region;
-    rectangle_t region[i_max_region+1];
+    rectangle_t *region = alloca((i_max_region+1) * sizeof(*region));
 
     i_region = 0;
     for( int i_used = 0; i_used < i_count; )
diff --git a/modules/control/globalhotkeys/win32.c b/modules/control/globalhotkeys/win32.c
index a4508f6..fa67fb4 100644
--- a/modules/control/globalhotkeys/win32.c
+++ b/modules/control/globalhotkeys/win32.c
@@ -171,7 +171,7 @@ static void *Thread( void *p_data )
             p_hotkey->psz_action != NULL;
             p_hotkey++ )
     {
-        char varname[12 + strlen( p_hotkey->psz_action )];
+        char *varname = alloca(12 + strlen( p_hotkey->psz_action ));
         sprintf( varname, "global-key-%s", p_hotkey->psz_action );
 
         char *key = var_InheritString( p_intf, varname );
diff --git a/modules/control/oldrc.c b/modules/control/oldrc.c
index b0f62d1..b09479f 100644
--- a/modules/control/oldrc.c
+++ b/modules/control/oldrc.c
@@ -141,9 +141,10 @@ VLC_FORMAT(2, 3)
 static void msg_rc( intf_thread_t *p_intf, const char *psz_fmt, ... )
 {
     va_list args;
-    char fmt_eol[strlen (psz_fmt) + 3];
+    size_t fmt_len = strlen (psz_fmt);
+    char *fmt_eol = alloca(fmt_len + 3);
 
-    snprintf (fmt_eol, sizeof (fmt_eol), "%s\r\n", psz_fmt);
+    snprintf (fmt_eol, fmt_len + 3, "%s\r\n", psz_fmt);
     va_start( args, psz_fmt );
 
     if( p_intf->p_sys->i_socket == -1 )
diff --git a/modules/demux/avformat/demux.c b/modules/demux/avformat/demux.c
index 8d71c86..0f44e7d 100644
--- a/modules/demux/avformat/demux.c
+++ b/modules/demux/avformat/demux.c
@@ -288,7 +288,7 @@ int OpenDemux( vlc_object_t *p_this )
 
 #if LIBAVFORMAT_VERSION_INT >= ((53<<16)+(26<<8)+0)
     char *psz_opts = var_InheritString( p_demux, "avformat-options" );
-    AVDictionary *options[p_sys->ic->nb_streams ? p_sys->ic->nb_streams : 1];
+    AVDictionary **options = alloca((p_sys->ic->nb_streams ? p_sys->ic->nb_streams : 1) * sizeof(*options));
     options[0] = NULL;
     unsigned int nb_streams = p_sys->ic->nb_streams;
     for (unsigned i = 1; i < nb_streams; i++)
diff --git a/modules/demux/avi/avi.c b/modules/demux/avi/avi.c
index 613210d..7ccee2f 100644
--- a/modules/demux/avi/avi.c
+++ b/modules/demux/avi/avi.c
@@ -2487,8 +2487,8 @@ static void AVI_IndexLoad( demux_t *p_demux )
 
     /* Load indexes */
     assert( p_sys->i_track <= 100 );
-    avi_index_t p_idx_indx[p_sys->i_track];
-    avi_index_t p_idx_idx1[p_sys->i_track];
+    avi_index_t *p_idx_indx = alloca(p_sys->i_track * sizeof(*p_idx_indx));
+    avi_index_t *p_idx_idx1 = alloca(p_sys->i_track * sizeof(*p_idx_idx1));
     for( unsigned i = 0; i < p_sys->i_track; i++ )
     {
         avi_index_Init( &p_idx_indx[i] );
diff --git a/modules/demux/playlist/dvb.c b/modules/demux/playlist/dvb.c
index 94289a4..7211be5 100644
--- a/modules/demux/playlist/dvb.c
+++ b/modules/demux/playlist/dvb.c
@@ -61,7 +61,7 @@ int Import_DVB(vlc_object_t *p_this)
         return VLC_EGENERIC;
     len = eol - peek;
 
-    char line[len + 1];
+    char *line = alloca(len + 1);
     memcpy(line, peek, len);
     line[len] = '\0';
 
diff --git a/modules/lua/libs/net.c b/modules/lua/libs/net.c
index 0df586a..6304b50 100644
--- a/modules/lua/libs/net.c
+++ b/modules/lua/libs/net.c
@@ -310,7 +310,7 @@ static int vlclua_net_recv( lua_State *L )
 {
     int fd = vlclua_fd_get( L, luaL_checkint( L, 1 ) );
     size_t i_len = luaL_optint( L, 2, 1 );
-    char psz_buffer[i_len];
+    char *psz_buffer = alloca(i_len);
 
     ssize_t i_ret = (fd != -1) ? recv( fd, psz_buffer, i_len, 0 ) : -1;
     if( i_ret > 0 )
diff --git a/modules/misc/addons/fsstorage.c b/modules/misc/addons/fsstorage.c
index 717050c..057ff50 100644
--- a/modules/misc/addons/fsstorage.c
+++ b/modules/misc/addons/fsstorage.c
@@ -354,7 +354,7 @@ static int recursive_mkdir( vlc_object_t *p_this, const char *psz_dirname )
         case ENOENT:
         {
             /* Let's try to create the parent directory */
-            char psz_parent[strlen( psz_dirname ) + 1], *psz_end;
+            char *psz_parent = alloca(strlen( psz_dirname ) + 1), *psz_end;
             strcpy( psz_parent, psz_dirname );
 
             psz_end = strrchr( psz_parent, DIR_SEP_CHAR );
diff --git a/modules/mux/mpeg/tables.c b/modules/mux/mpeg/tables.c
index c2fe555..da47ea0 100644
--- a/modules/mux/mpeg/tables.c
+++ b/modules/mux/mpeg/tables.c
@@ -289,7 +289,7 @@ void BuildPMT( dvbpsi_t *p_dvbpsi, vlc_object_t *p_object,
         size_t provlen = VLC_CLIP(strlen(psz_sdtprov), 0, 255);
         size_t servlen = VLC_CLIP(strlen(psz_sdtserv), 0, 255);
 
-        uint8_t psz_sdt_desc[3 + provlen + servlen];
+        uint8_t *psz_sdt_desc = alloca(3 + provlen + servlen);
 
         psz_sdt_desc[0] = 0x01; /* digital television service */
 
diff --git a/modules/services_discovery/sap.c b/modules/services_discovery/sap.c
index dfa697e..0f2c499 100644
--- a/modules/services_discovery/sap.c
+++ b/modules/services_discovery/sap.c
@@ -534,7 +534,7 @@ static void *Run( void *data )
     {
         vlc_restorecancel (canc);
         unsigned n = p_sd->p_sys->i_fd;
-        struct pollfd ufd[n];
+        struct pollfd *ufd = alloca(n * sizeof(*ufd));
 
         for (unsigned i = 0; i < n; i++)
         {
@@ -1190,7 +1190,7 @@ static sdp_t *ParseSDP (vlc_object_t *p_obj, const char *psz_sdp)
         /* Extract one line */
         char *eol = strchr (psz_sdp, '\n');
         size_t linelen = eol ? (size_t)(eol - psz_sdp) : strlen (psz_sdp);
-        char line[linelen + 1];
+        char *line = alloca(linelen + 1);
         memcpy (line, psz_sdp, linelen);
         line[linelen] = '\0';
 
diff --git a/modules/video_output/vmem.c b/modules/video_output/vmem.c
index 3f117da..cc2e4b3 100644
--- a/modules/video_output/vmem.c
+++ b/modules/video_output/vmem.c
@@ -282,7 +282,7 @@ static picture_pool_t *Pool(vout_display_t *vd, unsigned count)
     if (count > sys->count)
         count = sys->count;
 
-    picture_t *pictures[count];
+    picture_t **pictures = alloca(count * sizeof(*pictures));
 
     for (unsigned i = 0; i < count; i++) {
         picture_sys_t *picsys = malloc(sizeof (*picsys));
-- 
1.9.5.msysgit.1

