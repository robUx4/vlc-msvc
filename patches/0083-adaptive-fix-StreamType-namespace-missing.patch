From 1717409e7a8f9f9e8a77f212b27d83728ece4963 Mon Sep 17 00:00:00 2001
From: Steve Lhomme <robux4@videolabs.io>
Date: Wed, 24 Jun 2015 18:50:34 +0200
Subject: [PATCH 83/99] adaptive: fix StreamType namespace missing

--
MSVC doesn't like that
---
 modules/demux/adaptative/logic/AlwaysBestAdaptationLogic.cpp   | 2 +-
 modules/demux/adaptative/logic/AlwaysLowestAdaptationLogic.cpp | 2 +-
 modules/demux/adaptative/logic/RateBasedAdaptationLogic.cpp    | 4 ++--
 modules/demux/adaptative/logic/Representationselectors.cpp     | 6 +++---
 modules/demux/adaptative/playlist/BasePeriod.cpp               | 5 +++--
 modules/demux/adaptative/playlist/Inheritables.hpp             | 1 +
 6 files changed, 11 insertions(+), 9 deletions(-)

diff --git a/modules/demux/adaptative/logic/AlwaysBestAdaptationLogic.cpp b/modules/demux/adaptative/logic/AlwaysBestAdaptationLogic.cpp
index c2a44cc..9ff9eda 100644
--- a/modules/demux/adaptative/logic/AlwaysBestAdaptationLogic.cpp
+++ b/modules/demux/adaptative/logic/AlwaysBestAdaptationLogic.cpp
@@ -36,7 +36,7 @@ AlwaysBestAdaptationLogic::AlwaysBestAdaptationLogic    () :
 {
 }
 
-BaseRepresentation *AlwaysBestAdaptationLogic::getCurrentRepresentation(StreamType type, BasePeriod *period) const
+BaseRepresentation *AlwaysBestAdaptationLogic::getCurrentRepresentation(adaptative::StreamType type, BasePeriod *period) const
 {
     RepresentationSelector selector;
     return selector.select(period, type);
diff --git a/modules/demux/adaptative/logic/AlwaysLowestAdaptationLogic.cpp b/modules/demux/adaptative/logic/AlwaysLowestAdaptationLogic.cpp
index b0d3827..dfedfd3 100644
--- a/modules/demux/adaptative/logic/AlwaysLowestAdaptationLogic.cpp
+++ b/modules/demux/adaptative/logic/AlwaysLowestAdaptationLogic.cpp
@@ -28,7 +28,7 @@ AlwaysLowestAdaptationLogic::AlwaysLowestAdaptationLogic():
 {
 }
 
-BaseRepresentation *AlwaysLowestAdaptationLogic::getCurrentRepresentation(StreamType type, BasePeriod *period) const
+BaseRepresentation *AlwaysLowestAdaptationLogic::getCurrentRepresentation(adaptative::StreamType type, BasePeriod *period) const
 {
     RepresentationSelector selector;
     return selector.select(period, type, 0);
diff --git a/modules/demux/adaptative/logic/RateBasedAdaptationLogic.cpp b/modules/demux/adaptative/logic/RateBasedAdaptationLogic.cpp
index 98f139b..0928623 100644
--- a/modules/demux/adaptative/logic/RateBasedAdaptationLogic.cpp
+++ b/modules/demux/adaptative/logic/RateBasedAdaptationLogic.cpp
@@ -47,7 +47,7 @@ RateBasedAdaptationLogic::RateBasedAdaptationLogic  (int w, int h) :
     stabilizer = 16;
 }
 
-BaseRepresentation *RateBasedAdaptationLogic::getCurrentRepresentation(StreamType type, BasePeriod *period) const
+BaseRepresentation *RateBasedAdaptationLogic::getCurrentRepresentation(adaptative::StreamType type, BasePeriod *period) const
 {
     if(period == NULL)
         return NULL;
@@ -98,7 +98,7 @@ FixedRateAdaptationLogic::FixedRateAdaptationLogic(size_t bps) :
     currentBps = bps;
 }
 
-BaseRepresentation *FixedRateAdaptationLogic::getCurrentRepresentation(StreamType type, BasePeriod *period) const
+BaseRepresentation *FixedRateAdaptationLogic::getCurrentRepresentation(adaptative::StreamType type, BasePeriod *period) const
 {
     if(period == NULL)
         return NULL;
diff --git a/modules/demux/adaptative/logic/Representationselectors.cpp b/modules/demux/adaptative/logic/Representationselectors.cpp
index 6b4f79c..b4b1fda 100644
--- a/modules/demux/adaptative/logic/Representationselectors.cpp
+++ b/modules/demux/adaptative/logic/Representationselectors.cpp
@@ -29,11 +29,11 @@ RepresentationSelector::RepresentationSelector()
 {
 }
 
-BaseRepresentation * RepresentationSelector::select(BasePeriod *period, StreamType type) const
+BaseRepresentation * RepresentationSelector::select(BasePeriod *period, adaptative::StreamType type) const
 {
     return select(period, type, std::numeric_limits<uint64_t>::max());
 }
-BaseRepresentation * RepresentationSelector::select(BasePeriod *period, StreamType type, uint64_t bitrate) const
+BaseRepresentation * RepresentationSelector::select(BasePeriod *period, adaptative::StreamType type, uint64_t bitrate) const
 {
     if (period == NULL)
         return NULL;
@@ -56,7 +56,7 @@ BaseRepresentation * RepresentationSelector::select(BasePeriod *period, StreamTy
     return best;
 }
 
-BaseRepresentation * RepresentationSelector::select(BasePeriod *period, StreamType type, uint64_t bitrate,
+BaseRepresentation * RepresentationSelector::select(BasePeriod *period, adaptative::StreamType type, uint64_t bitrate,
                                                 int width, int height) const
 {
     if(period == NULL)
diff --git a/modules/demux/adaptative/playlist/BasePeriod.cpp b/modules/demux/adaptative/playlist/BasePeriod.cpp
index 18486e9..7a8ffa0 100644
--- a/modules/demux/adaptative/playlist/BasePeriod.cpp
+++ b/modules/demux/adaptative/playlist/BasePeriod.cpp
@@ -29,6 +29,7 @@
 #include "BasePeriod.h"
 #include "AbstractPlaylist.hpp"
 #include "../Streams.hpp"
+#include "../StreamsType.hpp"
 
 #include <vlc_common.h>
 #include <vlc_arrays.h>
@@ -61,7 +62,7 @@ const std::vector<BaseAdaptationSet*>&  BasePeriod::getAdaptationSets() const
     return adaptationSets;
 }
 
-const std::vector<BaseAdaptationSet*>   BasePeriod::getAdaptationSets(StreamType type) const
+const std::vector<BaseAdaptationSet*>   BasePeriod::getAdaptationSets(adaptative::StreamType type) const
 {
     std::vector<BaseAdaptationSet*> list;
     std::vector<BaseAdaptationSet*>::const_iterator it;
@@ -82,7 +83,7 @@ void BasePeriod::addAdaptationSet(BaseAdaptationSet *adaptationSet)
     }
 }
 
-BaseAdaptationSet * BasePeriod::getAdaptationSet(StreamType type) const
+BaseAdaptationSet * BasePeriod::getAdaptationSet(adaptative::StreamType type) const
 {
     std::vector<BaseAdaptationSet *>::const_iterator it;
     for(it = adaptationSets.begin(); it != adaptationSets.end(); ++it)
diff --git a/modules/demux/adaptative/playlist/Inheritables.hpp b/modules/demux/adaptative/playlist/Inheritables.hpp
index 64b6d03..6c8951c 100644
--- a/modules/demux/adaptative/playlist/Inheritables.hpp
+++ b/modules/demux/adaptative/playlist/Inheritables.hpp
@@ -22,6 +22,7 @@
 
 #include "../tools/Properties.hpp"
 #include <string>
+#include <stdint.h>
 
 namespace adaptative
 {
-- 
1.9.5.msysgit.0

