From df5e6e6ad49661383b61ea528fa16f3f32e13055 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hugo=20Beauz=C3=A9e-Luyssen?= <hugo@beauzee.fr>
Date: Tue, 21 Oct 2014 13:02:28 +0200
Subject: [PATCH 02/99] core: Use alloca instead of VLAs

This is done only for code that is used on windows
---
 src/config/chain.c      | 4 ++--
 src/config/file.c       | 2 +-
 src/input/item.c        | 2 +-
 src/input/stream.c      | 2 +-
 src/input/subtitles.c   | 6 +++---
 src/misc/http_auth.c    | 4 ++--
 src/misc/messages.c     | 2 +-
 src/misc/picture_pool.c | 4 ++--
 src/network/httpd.c     | 2 +-
 src/network/tcp.c       | 2 +-
 src/playlist/art.c      | 2 +-
 src/playlist/loadsave.c | 2 +-
 12 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/src/config/chain.c b/src/config/chain.c
index 7d0b71d..60c4953 100644
--- a/src/config/chain.c
+++ b/src/config/chain.c
@@ -279,7 +279,7 @@ void config_ChainParse( vlc_object_t *p_this, const char *psz_prefix,
         if (optname[0] == '*')
             optname++;
 
-        char name[plen + strlen( optname )];
+        char *name = alloca(plen + strlen( optname ));
         snprintf( name, sizeof (name), "%s%s", psz_prefix, optname );
         if( var_Create( p_this, name,
                         config_GetType( p_this, name ) | VLC_VAR_DOINHERIT ) )
@@ -330,7 +330,7 @@ void config_ChainParse( vlc_object_t *p_this, const char *psz_prefix,
         }
 
         /* create name */
-        char name[plen + strlen( ppsz_options[i] )];
+        char *name = alloca(plen + strlen( ppsz_options[i] ));
         const char *psz_name = name;
         snprintf( name, sizeof (name), "%s%s", psz_prefix,
                   b_once ? (ppsz_options[i] + 1) : ppsz_options[i] );
diff --git a/src/config/file.c b/src/config/file.c
index 3c1712a..a8f3360 100644
--- a/src/config/file.c
+++ b/src/config/file.c
@@ -278,7 +278,7 @@ int config_CreateDir( vlc_object_t *p_this, const char *psz_dirname )
         case ENOENT:
         {
             /* Let's try to create the parent directory */
-            char psz_parent[strlen( psz_dirname ) + 1], *psz_end;
+            char *psz_parent = alloca(strlen( psz_dirname ) + 1), *psz_end;
             strcpy( psz_parent, psz_dirname );
 
             psz_end = strrchr( psz_parent, DIR_SEP_CHAR );
diff --git a/src/input/item.c b/src/input/item.c
index 2dd8ca0..fb48f10 100644
--- a/src/input/item.c
+++ b/src/input/item.c
@@ -853,7 +853,7 @@ void input_item_SetEpgOffline( input_item_t *p_item )
     const int i_epg_info = p_item->i_epg;
     if( i_epg_info > 0 )
     {
-        char *ppsz_epg_info[i_epg_info];
+        char **ppsz_epg_info = alloca(i_epg_info * sizeof(char*));
         for( int i = 0; i < p_item->i_epg; i++ )
         {
             const vlc_epg_t *p_epg = p_item->pp_epg[i];
diff --git a/src/input/stream.c b/src/input/stream.c
index 3251510..5219a17 100644
--- a/src/input/stream.c
+++ b/src/input/stream.c
@@ -264,7 +264,7 @@ stream_t *stream_UrlNew( vlc_object_t *p_parent, const char *psz_url )
     if( !psz_url )
         return NULL;
 
-    char psz_dup[strlen( psz_url ) + 1];
+    char *psz_dup = alloca(strlen( psz_url ) + 1);
     strcpy( psz_dup, psz_url );
     input_SplitMRL( &psz_access, &psz_demux, &psz_path, &psz_anchor, psz_dup );
 
diff --git a/src/input/subtitles.c b/src/input/subtitles.c
index 35b5f4c..793e945 100644
--- a/src/input/subtitles.c
+++ b/src/input/subtitles.c
@@ -318,9 +318,9 @@ char **subtitles_Detect( input_thread_t *p_this, char *psz_path,
             if( psz_name[0] == '.' || !subtitles_Filter( psz_name ) )
                 continue;
 
-            char tmp_fname_noext[strlen( psz_name ) + 1];
-            char tmp_fname_trim[strlen( psz_name ) + 1];
-            char tmp_fname_ext[strlen( psz_name ) + 1];
+            char *tmp_fname_noext = alloca(strlen( psz_name ) + 1);
+            char *tmp_fname_trim = alloca(strlen( psz_name ) + 1);
+            char *tmp_fname_ext = alloca(strlen( psz_name ) + 1);
             const char *tmp;
             int i_prio = SUB_PRIORITY_NONE;
 
diff --git a/src/misc/http_auth.c b/src/misc/http_auth.c
index 7d6d245..28f55ce 100644
--- a/src/misc/http_auth.c
+++ b/src/misc/http_auth.c
@@ -45,7 +45,7 @@
  *****************************************************************************/
 static char *AuthGetParam( const char *psz_header, const char *psz_param )
 {
-    char psz_what[strlen(psz_param)+3];
+    char *psz_what = alloca(strlen(psz_param)+3);
     sprintf( psz_what, "%s=\"", psz_param );
     psz_header = strstr( psz_header, psz_what );
     if ( psz_header )
@@ -65,7 +65,7 @@ static char *AuthGetParam( const char *psz_header, const char *psz_param )
 
 static char *AuthGetParamNoQuotes( const char *psz_header, const char *psz_param )
 {
-    char psz_what[strlen(psz_param)+2];
+    char *psz_what = alloca(strlen(psz_param)+2);
     sprintf( psz_what, "%s=", psz_param );
     psz_header = strstr( psz_header, psz_what );
     if ( psz_header )
diff --git a/src/misc/messages.c b/src/misc/messages.c
index 8cbb7f1..abbcd28 100644
--- a/src/misc/messages.c
+++ b/src/misc/messages.c
@@ -100,7 +100,7 @@ void vlc_vaLog (vlc_object_t *obj, int type, const char *module,
     p = strchr(module, '.');
 
     size_t modlen = (p != NULL) ? (p - module) : 0;
-    char modulebuf[modlen + 1];
+    char *modulebuf = alloca(modlen + 1);
     if (p != NULL)
     {
         memcpy(modulebuf, module, modlen);
diff --git a/src/misc/picture_pool.c b/src/misc/picture_pool.c
index 64c60a9..f906001 100644
--- a/src/misc/picture_pool.c
+++ b/src/misc/picture_pool.c
@@ -185,8 +185,8 @@ picture_pool_t *picture_pool_New(unsigned count, picture_t *const *tab)
 picture_pool_t *picture_pool_NewFromFormat(const video_format_t *fmt,
                                            unsigned count)
 {
-    picture_t *picture[count ? count : 1];
     unsigned i;
+    picture_t **picture = alloca((count ? count : 1) * sizeof(*picture));
 
     for (i = 0; i < count; i++) {
         picture[i] = picture_NewFromFormat(fmt);
@@ -208,7 +208,7 @@ error:
 
 picture_pool_t *picture_pool_Reserve(picture_pool_t *master, unsigned count)
 {
-    picture_t *picture[count ? count : 1];
+    picture_t **picture = alloca((count ? count : 1) * sizeof(*picture));
     unsigned i;
 
     for (i = 0; i < count; i++) {
diff --git a/src/network/httpd.c b/src/network/httpd.c
index 2af6b4e..2abc433 100644
--- a/src/network/httpd.c
+++ b/src/network/httpd.c
@@ -1718,7 +1718,7 @@ auth_failed:
 
 static void httpdLoop(httpd_host_t *host)
 {
-    struct pollfd ufd[host->nfd + host->i_client];
+    struct pollfd *ufd = alloca((host->nfd + host->i_client) * sizeof(*ufd));
     unsigned nfd;
     for (nfd = 0; nfd < host->nfd; nfd++) {
         ufd[nfd].fd = host->fds[nfd];
diff --git a/src/network/tcp.c b/src/network/tcp.c
index f999aaf..399a797 100644
--- a/src/network/tcp.c
+++ b/src/network/tcp.c
@@ -276,7 +276,7 @@ int net_Accept (vlc_object_t *p_this, int *pi_fd)
     while (pi_fd[n] != -1)
         n++;
 
-    struct pollfd ufd[n];
+    struct pollfd *ufd = alloca(n * sizeof(*ufd));
     /* Initialize file descriptor set */
     for (unsigned i = 0; i < n; i++)
     {
diff --git a/src/playlist/art.c b/src/playlist/art.c
index 18a3764..c102411 100644
--- a/src/playlist/art.c
+++ b/src/playlist/art.c
@@ -40,7 +40,7 @@
 
 static void ArtCacheCreateDir( const char *psz_dir )
 {
-    char newdir[strlen( psz_dir ) + 1];
+    char* newdir = alloca(strlen( psz_dir ) + 1);
     strcpy( newdir, psz_dir );
     char * psz_newdir = newdir;
     char * psz = psz_newdir;
diff --git a/src/playlist/loadsave.c b/src/playlist/loadsave.c
index 9215e2a..c3273f9 100644
--- a/src/playlist/loadsave.c
+++ b/src/playlist/loadsave.c
@@ -192,7 +192,7 @@ int playlist_MLDump( playlist_t *p_playlist )
         return VLC_EGENERIC;
     }
 
-    char psz_dirname[ strlen( psz_temp ) + sizeof( DIR_SEP "ml.xspf")];
+    char* psz_dirname = alloca(strlen( psz_temp ) + sizeof( DIR_SEP "ml.xspf"));
     strcpy( psz_dirname, psz_temp );
     free( psz_temp );
     if( config_CreateDir( (vlc_object_t *)p_playlist, psz_dirname ) )
-- 
1.9.5.msysgit.0

