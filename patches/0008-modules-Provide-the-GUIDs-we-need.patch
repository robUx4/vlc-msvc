From 18254d03715b3a6b040d97e5f0e7941bb47a34c6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hugo=20Beauz=C3=A9e-Luyssen?= <hugo@beauzee.fr>
Date: Tue, 21 Oct 2014 16:03:18 +0200
Subject: [PATCH 08/74] modules: Provide the GUIDs we need

---
 modules/access/dshow/vlc_dshow.h | 22 ++++++++++++++++++++++
 modules/access/dtv/bdagraph.cpp  | 22 ++++++++++++++++++++++
 modules/audio_output/mmdevice.c  | 21 ++++++++++++++++++---
 modules/audio_output/wasapi.c    |  8 ++++++++
 modules/codec/mft.c              |  3 +++
 5 files changed, 73 insertions(+), 3 deletions(-)

diff --git a/modules/access/dshow/vlc_dshow.h b/modules/access/dshow/vlc_dshow.h
index 816884e..89881d2 100644
--- a/modules/access/dshow/vlc_dshow.h
+++ b/modules/access/dshow/vlc_dshow.h
@@ -31,6 +31,27 @@
 # include <_mingw.h>
 #endif
 
+#ifdef _MSC_VER
+// Order matters here
+# include <Dshow.h>
+# include <ks.h>
+# include <ksmedia.h>
+# include <wmsdkidl.h>
+DEFINE_GUID(MEDIASUBTYPE_ARGB32 ,0x773c9ac0, 0x3274, 0x11d0, 0xb7, 0x24, 0x0, 0xaa, 0x0, 0x6c, 0x1a, 0x1);
+/* Packed YUV formats */
+DEFINE_GUID(MEDIASUBTYPE_YUYV ,0x56595559, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);
+/* Planar YUV formats */
+DEFINE_GUID(MEDIASUBTYPE_IYUV ,0x56555949, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71); /* identical to YV12 */
+DEFINE_GUID(MEDIASUBTYPE_I420 ,0x30323449, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);
+/* MPEG2 formats */
+DEFINE_GUID(MEDIASUBTYPE_MPEG2_VIDEO     ,0xe06d8026, 0xdb46, 0x11cf, 0xb4, 0xd1, 0x00, 0x80, 0x5f, 0x6c, 0xbb, 0xea);
+DEFINE_GUID(MEDIASUBTYPE_MPEG2_PROGRAM   ,0xe06d8022, 0xdb46, 0x11cf, 0xb4, 0xd1, 0x00, 0x80, 0x5f, 0x6c, 0xbb, 0xea);
+DEFINE_GUID(MEDIASUBTYPE_MPEG2_TRANSPORT ,0xe06d8023, 0xdb46, 0x11cf, 0xb4, 0xd1, 0x00, 0x80, 0x5f, 0x6c, 0xbb, 0xea);
+
+/* float */
+DEFINE_GUID(MEDIASUBTYPE_IEEE_FLOAT ,0x00000003, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);
+#else
+
 #include <wtypes.h>
 #include <unknwn.h>
 #include <ole2.h>
@@ -370,4 +391,5 @@ DECLARE_INTERFACE_(IAMTVAudio, IUnknown)
 };
 
 #endif /* __MINGW64_VERSION_MAJOR */
+#endif /* _MSC_VER */
 #endif /* VLC_DSHOW_H */
diff --git a/modules/access/dtv/bdagraph.cpp b/modules/access/dtv/bdagraph.cpp
index 3a8ef30..6309ea6 100644
--- a/modules/access/dtv/bdagraph.cpp
+++ b/modules/access/dtv/bdagraph.cpp
@@ -35,6 +35,28 @@
 #include "dtv/dtv.h"
 #undef DEBUG_MONIKER_NAME
 
+#ifdef _MSC_VER
+const GUID CLSID_ATSCLocator = { 0x8872ff1b,0x98fa,0x4d7a,{0x8d,0x93,0xc9,0xf1,0x05,0x5f,0x85,0xbb}};
+const GUID IID_IATSCLocator = { 0xbf8d986f,0x8c2b,0x4131,{0x94,0xd7,0x4d,0x3d,0x9f,0xcc,0x21,0xef}};
+const GUID IID_IATSCChannelTuneRequest = { 0x0369b4e1,0x45b6,0x11d3,{0xb6,0x50,0x00,0xc0,0x4f,0x79,0x49,0x8e}};
+const GUID IID_IDVBTuningSpace2 = { 0x843188b4,0xce62,0x43db,{0x96,0x6b,0x81,0x45,0xa0,0x94,0xe0,0x40}};
+const GUID CLSID_DVBTLocator = { 0x9cd64701,0xbdf3,0x4d14,{0x8e,0x03,0xf1,0x29,0x83,0xd8,0x66,0x64}};
+const GUID IID_IDVBTLocator = { 0x8664da16,0xdda2,0x42ac,{0x92,0x6a,0xc1,0x8f,0x91,0x27,0xc3,0x02}};
+const GUID IID_IDVBTuneRequest = { 0x0d6f567e,0xa636,0x42bb,{0x83,0xba,0xce,0x4c,0x17,0x04,0xaf,0xa2}};
+const GUID CLSID_DVBCLocator = { 0xc531d9fd,0x9685,0x4028,{0x8b,0x68,0x6e,0x12,0x32,0x07,0x9f,0x1e}};
+const GUID IID_IDVBCLocator = { 0x6e42f36e,0x1dd2,0x43c4,{0x9f,0x78,0x69,0xd2,0x5a,0xe3,0x90,0x34}};
+const GUID IID_IDVBSTuningSpace = { 0xcdf7be60,0xd954,0x42fd,{0xa9,0x72,0x78,0x97,0x19,0x58,0xe4,0x70}};
+const GUID CLSID_DVBSLocator = { 0x1df7d126,0x4050,0x47f0,{0xa7,0xcf,0x4c,0x4c,0xa9,0x24,0x13,0x33}};
+const GUID IID_IDVBSLocator = { 0x3d7c353c,0x0d04,0x45f1,{0xa7,0x42,0xf9,0x7c,0xc1,0x18,0x8d,0xc8}};
+const GUID IID_ITuningSpace = { 0x061c6e30,0xe622,0x11d2,{0x94,0x93,0x00,0xc0,0x4f,0x72,0xd9,0x80}};
+const GUID CLSID_DVBSTuningSpace = { 0xb64016f3,0xc9a2,0x4066,{0x96,0xf0,0xbd,0x95,0x63,0x31,0x47,0x26}};
+const GUID CLSID_DVBTuningSpace = { 0xc6b14b32,0x76aa,0x4a86,{0xa7,0xac,0x5c,0x79,0xaa,0xf5,0x8d,0xa7}};
+const GUID CLSID_ATSCTuningSpace = { 0xa2e30750,0x6c3d,0x11d3,{0xb6,0x53,0x00,0xc0,0x4f,0x79,0x49,0x8e}};
+const GUID CLSID_SystemTuningSpaces = { 0xd02aac50,0x027e,0x11d3,{0x9d,0x8e,0x00,0xc0,0x4f,0x72,0xd9,0x80}};
+const GUID IID_ITuningSpaceContainer = { 0x5b692e84,0xe2f1,0x11d2,{0x94,0x93,0x00,0xc0,0x4f,0x72,0xd9,0x80}};
+const GUID IID_IScanningTuner = { 0x1dfd0a5c,0x0284,0x11d3,{0x9d,0x8e,0x00,0xc0,0x4f,0x72,0xd9,0x80}};
+#endif
+
 static ModulationType dvb_parse_modulation (const char *mod)
 {
     if (!strcmp (mod, "16QAM"))   return BDA_MOD_16QAM;
diff --git a/modules/audio_output/mmdevice.c b/modules/audio_output/mmdevice.c
index d9d3573..2803704 100644
--- a/modules/audio_output/mmdevice.c
+++ b/modules/audio_output/mmdevice.c
@@ -44,10 +44,25 @@ DEFINE_PROPERTYKEY(PKEY_Device_FriendlyName, 0xa45c254e, 0xdf1c, 0x4efd,
 #include "audio_output/mmdevice.h"
 
 #if (_WIN32_WINNT < 0x600)
-static VOID WINAPI (*InitializeConditionVariable)(PCONDITION_VARIABLE);
-static BOOL WINAPI (*SleepConditionVariableCS)(PCONDITION_VARIABLE,
+#ifdef _MSC_VER
+typedef RTL_CONDITION_VARIABLE CONDITION_VARIABLE, *PCONDITION_VARIABLE;
+DEFINE_GUID(IID_IAudioSessionEvents, 0x24918acc, 0x64b3, 0x37c1, 0x8c,0xa9, 0x74,0xa6,0x6e,0x99,0x57,0xa8);
+DEFINE_GUID(IID_IAudioSessionControl2, 0xbfb7ff88, 0x7239, 0x4fc9, 0x8f,0xa2, 0x07,0xc9,0x50,0xbe,0x9c,0x6d);
+DEFINE_GUID(IID_IAudioSessionManager, 0xbfa971f1, 0x4d5e, 0x40bb, 0x93,0x5e, 0x96,0x70,0x39,0xbf,0xbe,0xe4);
+DEFINE_GUID(IID_IAudioVolumeDuckNotification, 0xc3b284d4, 0x6d39, 0x4359, 0xb3,0xcf, 0xb5,0x6d,0xdb,0x3b,0xb3,0x9c);
+DEFINE_GUID(IID_IAudioSessionManager2, 0x77aa99a0, 0x1bd6, 0x484f, 0x8b,0xc7, 0x2c,0x65,0x4c,0x9a,0x9b,0x6f);
+DEFINE_GUID(IID_IMMNotificationClient, 0x7991eec9, 0x7e89, 0x4d85, 0x83,0x90, 0x6c,0x70,0x3c,0xec,0x60,0xc0);
+DEFINE_GUID(IID_IMMEndpoint, 0x1be09788, 0x6894, 0x4089, 0x85,0x86, 0x9a,0x2a,0x6c,0x26,0x5a,0xc5);
+DEFINE_GUID(IID_IMMDeviceEnumerator, 0xa95664d2, 0x9614, 0x4f35, 0xa7,0x46, 0xde,0x8d,0xb6,0x36,0x17,0xe6);
+DEFINE_GUID(CLSID_MMDeviceEnumerator, 0xbcde0395, 0xe52f, 0x467c, 0x8e,0x3d, 0xc4,0x57,0x92,0x91,0x69,0x2e);
+DEFINE_GUID(IID_IAudioEndpointVolumeCallback, 0x657804fa, 0xd6ad, 0x4496, 0x8a,0x60, 0x35,0x27,0x52,0xaf,0x4f,0x89);
+DEFINE_GUID(IID_IAudioEndpointVolume, 0x5cdf2c82, 0x841e, 0x4546, 0x97,0x22, 0x0c,0xf7,0x40,0x78,0x22,0x9a);
+#endif
+
+static VOID (WINAPI *InitializeConditionVariable) (PCONDITION_VARIABLE);
+static BOOL (WINAPI *SleepConditionVariableCS) (PCONDITION_VARIABLE,
                                                PCRITICAL_SECTION, DWORD);
-static VOID WINAPI (*WakeConditionVariable)(PCONDITION_VARIABLE);
+static VOID (WINAPI *WakeConditionVariable)(PCONDITION_VARIABLE);
 #define LOOKUP(s) \
     if (((s) = (void *)GetProcAddress(h, #s)) == NULL) return FALSE
 
diff --git a/modules/audio_output/wasapi.c b/modules/audio_output/wasapi.c
index 7a47161..ee20d60 100644
--- a/modules/audio_output/wasapi.c
+++ b/modules/audio_output/wasapi.c
@@ -35,6 +35,14 @@
 #include <vlc_plugin.h>
 #include "audio_output/mmdevice.h"
 
+#ifdef _MSC_VER
+DEFINE_GUID(IID_IAudioClient, 0x1cb9ad4c, 0xdbfa, 0x4c32, 0xb1,0x78, 0xc2,0xf5,0x68,0xa7,0x03,0xb2);
+DEFINE_GUID(IID_IAudioRenderClient, 0xf294acfc, 0x3146, 0x4483, 0xa7,0xbf, 0xad,0xdc,0xa7,0xc2,0x60,0xe2);
+DEFINE_GUID(IID_IAudioClock, 0xcd63314f, 0x3fba, 0x4a1b, 0x81,0x2c, 0xef,0x96,0x35,0x87,0x28,0xe7);
+DEFINE_GUID(KSDATAFORMAT_SUBTYPE_IEEE_FLOAT, WAVE_FORMAT_IEEE_FLOAT, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);
+DEFINE_GUID(KSDATAFORMAT_SUBTYPE_PCM, WAVE_FORMAT_PCM, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);
+#endif
+
 static LARGE_INTEGER freq; /* performance counters frequency */
 
 BOOL WINAPI DllMain(HINSTANCE, DWORD, LPVOID); /* avoid warning */
diff --git a/modules/codec/mft.c b/modules/codec/mft.c
index 7dffde3..fcc0d73 100644
--- a/modules/codec/mft.c
+++ b/modules/codec/mft.c
@@ -172,7 +172,10 @@ static const pair_format_guid video_format_table[] =
     { 0, NULL }
 };
 
+#ifndef _MSC_VER
 DEFINE_GUID(MFAudioFormat_Dolby_AC3, 0xe06d802c, 0xdb46, 0x11cf, 0xb4, 0xd1, 0x00, 0x80, 0x5f, 0x6c, 0xbb, 0xea);
+#endif
+
 /*
  * We cannot use the FOURCC code for audio either since the
  * WAVE_FORMAT value is used to create the GUID.
-- 
2.2.0

